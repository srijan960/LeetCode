/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA==null) return headA;
        if(headB==null) return headB;
        ListNode tempA=headA;
        int countA=0;
        while(tempA!=null){
            countA++;
            tempA=tempA.next;
        }
        ListNode tempB=headB;
        int countB=0;
        while(tempB!=null){
            countB++;
            tempB=tempB.next;
        }
       
        while(countA<countB){
            headB=headB.next;
            countB--;
        }
        while(countB<countA){
            headA=headA.next;
            countA--;
        }
       
        while(headA!=null&&headB!=null){
            if(headA==headB) return headA;
           else{ 
          headA=headA.next;
         
        headB=headB.next;
         }
        }
        return null;
        
    }
}
