class Solution {
    public int lengthOfLIS(int[] nums) {
        if(nums.length == 0) return 0;
        int[] temp = new int[nums.length];
        int len = 0;
        temp[len++] = nums[0];        
        for(int i = 1; i < nums.length; i++){
            if(nums[i] > temp[len - 1]){
                temp[len++] = nums[i];
            }
            else{
                int index = Bsearch(temp, 0, len - 1, nums[i]);
                temp[index] = nums[i];
            }
        }
        
        return len;
    }
    
    public static int Bsearch(int[] temp, int l, int r, int num){
        int m = 0;
        while(l <= r){
            m = l + (r - l) / 2;
            if(temp[m] == num) return m;
            else if(temp[m] > num){
                return Bsearch(temp, l, m - 1, num);
            }
            else if(temp[m] < num){
                return Bsearch(temp,m + 1, r, num);
            }
        }
        return l;
    }
}
