class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> st1 = new Stack<>();
        Stack<Integer> st2 = new Stack<>();
        
        while(l1 != null){
            st1.push(l1.val);
            l1 = l1.next;
        }
        while(l2 != null){
            st2.push(l2.val);
            l2 = l2.next;
        }
        
        int carry = 0;
        ListNode res = new ListNode(0);
        
        while(!st1.empty() || !st2.empty()){
            if(!st1.empty()) carry += st1.pop();
            if(!st2.empty()) carry += st2.pop();
            
            res.val = carry % 10;
            ListNode head = new ListNode(carry/10);
            head.next = res;
            res = head;
            carry /= 10;
        }
        
        return res.val == 0 ? res.next : res;
        
    }
}
