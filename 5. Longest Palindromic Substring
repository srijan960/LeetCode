class Solution {
    public String longestPalindrome(String s) {
    int n = s.length(); 
    boolean[][] dp = new boolean[n][n];
        int l = 0;
        int r = 0;
      for(int i = 0; i < n; i++){
          dp[i][i] = true;
          l = i;
          r = i;
      }  
        
      int ans = 0;  
      for(int i = 0; i < n - 1; i++){
          if(s.charAt(i) == s.charAt(i + 1)){
              dp[i][i + 1] = true;
              ans = 2;
              l = i;
              r = i + 1;
          }
      }
    
      for(int k = 3; k <= n; k++){
          for(int i = 0; i < n - k + 1; i++){
              int j = i + k - 1;
              //System.out.println(i +" " + j);
              if(s.charAt(i) == s.charAt(j) && dp[i + 1][j - 1] ){
                  dp[i][j] = true;
                  if(k > ans){
                  ans = k;
                  l = i;
                  r = j;
                //  System.out.println(k);
                  }
              }
          }
      }
       return s.substring(l, r + 1); 
        
    }
}
