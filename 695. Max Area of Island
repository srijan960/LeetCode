class Solution {
    public int maxAreaOfIsland(int[][] grid) {
     
        int ans = 0;
        int m = grid.length;
        int n = grid[0].length;
        
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(grid[i][j] == 1){
                    ans = Math.max(ans, dfs(i, j, m, n, grid));
                }
            }
        }
        
        return ans;
    
    }
    
    public int dfs(int i, int j, int m, int n, int[][] grid){
        
        if(i >= 0 && i < m && j >= 0 && j < n && grid[i][j] == 1){
            grid[i][j] = 0;
            int d1 = dfs(i + 1, j, m, n, grid);
            int d2 = dfs(i - 1, j, m, n, grid);
            int d3 = dfs(i , j + 1, m, n, grid);
            int d4 = dfs(i, j - 1, m, n, grid);
            
            return 1 + d1 + d2 + d3 + d4;
        }
        
        return 0;
    }
}
