class Solution {
    
    private void computeLPS (String needle, int[] lps) {
        
        int len = 0;
        int i = 1;
        
        while (i < needle.length ()) {
            if (needle.charAt (len) == needle.charAt (i)) {
                lps[i] = ++len;
                ++i;
            }
            else {
                if (len != 0) {
                    len = lps[len - 1];
                }
                else {
                    lps[i++] = len;
                }
            }
        }
    }
    
    public int strStr(String haystack, String needle) {
        
        if (needle.equals ("")) {
            return 0;
        }
        
        int[] lps = new int[needle.length ()];
        computeLPS (needle, lps);
        
        int i = 0;
        int j = 0;
        
        while (i < haystack.length ()) {
            if (haystack.charAt (i) == needle.charAt (j)) {
                i++;
                j++;
            }
            if (j == needle.length ()) {
                return i - j;
            }
            else if (i < haystack.length () && haystack.charAt (i) != needle.charAt (j)) {
                if (j != 0) {
                    j = lps[j - 1];
                }
                else {
                    i++;
                }
            }
        }
        
        return -1;
    }
}
